group 'com.superbia'
version '0.1.0'

buildscript {
	ext {
		springBootVersion = '1.2.4.RELEASE'
  }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.springframework:springloaded:1.2.0.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'document-flow-domain'
    version =  '0.1.0'
}

ext {
    activitiVersion = '5.17.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // Support for the “Java Persistence API” including spring-data-jpa, spring-orm and Hibernate.
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    compile("com.mysema.querydsl:querydsl-apt:3.3.0")
    compile("com.mysema.querydsl:querydsl-jpa:3.3.0")

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

sourceSets {
  generated {
    java {
      srcDirs = ['src/main/generated-sources']
    }
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

task generateMetaModel(type: JavaCompile, group: 'build', description: 'Generates the metamodel') {
  source = sourceSets.main.java
  classpath = configurations.compile
  options.compilerArgs = [
      "-proc:only",
      "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
  ]
  // specify output of generated code
  destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
  dependsOn generateMetaModel
  source generateMetaModel.destinationDir
}

compileGeneratedJava {
  dependsOn generateMetaModel
  options.warnings = false
  classpath += sourceSets.main.runtimeClasspath
}

clean {
  delete sourceSets.generated.java.srcDirs
}